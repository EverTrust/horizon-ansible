- hosts: webserver
  become: yes
  tasks:
  - name: update
    apt: update_cache=yes   
  
  - name: Installing nginx
    apt: 
      name: nginx 
      state: latest

  - name: Enrolling a certificate on Horizon for domain {{ domain }}
    evertrust.horizon.horizon_enroll:
      endpoint: "{{ horizon_endpoint }}"
      mode: "centralized"
      key_type: "{{ key_type }}"
      x_api_id: "{{ api_id }}"
      x_api_key: "{{ api_key }}"
      profile: "{{ profile }}"
      subject:
        cn.1: "{{ domain }}"
      sans:
        dnsname.1: "{{ domain }}"
        dnsname.2: "www.{{ domain }}"
      labels:
        BusinessUnit: "{{ business_unit }}"
        ansible_host: "{{ ansible_host }}"
      contact_email: "{{ contact_email }}"  
    register: enrolled_certificate
  
  - name: Creating the SSL directory
    file:
      path: /etc/nginx/ssl
      state: directory
      mode: '0775'
      owner: "www-data"
      group: "www-data"

  - name: Uploading the {{ domain }} certificate
    copy:
      content: "{{ enrolled_certificate['certificate'] }}"
      dest: "/etc/nginx/ssl/{{ domain }}.crt"
      mode: '0660'
      owner: "www-data"
      group: "www-data"
    
  - name: Uploading the {{ domain }} privatre key
    copy:
      content: "{{ enrolled_certificate['key'] }}"
      dest: "/etc/nginx/ssl/{{ domain }}.key"
      mode: '0660'
      owner: "www-data"
      group: "www-data"
    
  - name: Creating the {{ domain }} www directory
    file:
      path: /var/www/{{ domain }}
      state: directory
      mode: '0775'
      owner: "www-data"
      group: "www-data"

  - name: Removing the default nginx site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: Uploading the {{ domain }} site
    template:
      src: ../templates/nginx.conf.j2
      dest: "/etc/nginx/sites-available/{{ domain }}"
      owner: "www-data"
      group: "www-data"
      mode: '0644'

  - name: Ensuring that {{ domain }} site exists
    stat: 
      path: "/etc/nginx/sites-enabled/{{domain}}"
    register: stat_result

  - name: Enabling the {{ domain }} site
    command: "ln -s /etc/nginx/sites-available/{{ domain }} /etc/nginx/sites-enabled"
    when: not stat_result.stat.exists

  - name: Restarting nginx
    service:
      name: nginx
      state: restarted